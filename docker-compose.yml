version: '3.8'

services:
  address-service:
    build:
      context: ./addressservice
      dockerfile: Dockerfile
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "8090:8090"
    restart: on-failure
    networks:
      - common
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/addressservice
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=test

  product-service:
    build:
      context: ./productservice
      dockerfile: Dockerfile
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "8084:8084"
    restart: on-failure
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common

  customer-service:
    build:
      context: ./customerservice
      dockerfile: Dockerfile
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "8087:8087"
    restart: on-failure
    networks:
      - common
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079

  cart-service:
    build:
      context: ./cartservice
      dockerfile: Dockerfile
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "8082:8082"
    restart: on-failure
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common

  order-service:
    build:
      context: ./orderservice
      dockerfile: Dockerfile
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "8083:8083"
    restart: on-failure
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common

  config-server:
    build:
      context: ./configserver
      dockerfile: Dockerfile
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "8079:8079"
    networks:
      - common

  discovery-server:
    build:
      context: ./discoveryserver
      dockerfile: Dockerfile
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "8888:8888"
    restart: on-failure
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common

  identity-service:
    build:
      context: ./identityservice
      dockerfile: Dockerfile
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "8086:8086"
    restart: on-failure
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common

  gateway-server:
    build:
      context: ./gatewayserver
      dockerfile: Dockerfile
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - discovery-server
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - common

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: test
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - common

volumes:
  postgres_data:

networks:
  common:
    driver: bridge
